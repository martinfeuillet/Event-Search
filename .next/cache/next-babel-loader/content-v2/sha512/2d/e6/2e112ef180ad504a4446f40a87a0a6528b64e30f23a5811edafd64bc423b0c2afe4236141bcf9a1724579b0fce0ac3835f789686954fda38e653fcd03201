{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/martinfeuillet/Desktop/vs code/next/next-js-course/nextjs-course-code/pages/events/[eventId].js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { getEventById } from \"../../dummyData\";\nimport EventSummary from \"../../components/events/event-summary\";\nimport EventLogistics from \"../../components/events/event-logistics\";\nimport EventContent from \"../../components/events/event-content\";\nimport ErrorAlert from \"../../components/ui/error-alert\";\nexport default function eventType() {\n  const router = useRouter();\n  const {\n    eventId\n  } = router.query;\n  const event = getEventById(eventId);\n\n  if (!event) {\n    return /*#__PURE__*/_jsxDEV(ErrorAlert, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No event found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(EventSummary, {\n      title: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EventLogistics, {\n      date: event.date,\n      address: event.location,\n      image: event.image,\n      imageAlt: event.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EventContent, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: event.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}","map":{"version":3,"sources":["/Users/martinfeuillet/Desktop/vs code/next/next-js-course/nextjs-course-code/pages/events/[eventId].js"],"names":["React","useEffect","useState","useRouter","getEventById","EventSummary","EventLogistics","EventContent","ErrorAlert","eventType","router","eventId","query","event","title","date","location","image","description"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,cAAP,MAA2B,yCAA3B;AACA,OAAOC,YAAP,MAAyB,uCAAzB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AAEA,eAAe,SAASC,SAAT,GAAqB;AAChC,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAcD,MAAM,CAACE,KAA3B;AACA,QAAMC,KAAK,GAAGT,YAAY,CAACO,OAAD,CAA1B;;AAEA,MAAI,CAACE,KAAL,EAAY;AACR,wBACI,QAAC,UAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAED,sBACI;AAAA,4BACI,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AACI,MAAA,IAAI,EAAED,KAAK,CAACE,IADhB;AAEI,MAAA,OAAO,EAAEF,KAAK,CAACG,QAFnB;AAGI,MAAA,KAAK,EAAEH,KAAK,CAACI,KAHjB;AAII,MAAA,QAAQ,EAAEJ,KAAK,CAACC;AAJpB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAQI,QAAC,YAAD;AAAA,6BACI;AAAA,kBAAID,KAAK,CAACK;AAAV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA,kBADJ;AAcH","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useRouter } from \"next/router\";\nimport { getEventById } from \"../../dummyData\";\nimport EventSummary from \"../../components/events/event-summary\";\nimport EventLogistics from \"../../components/events/event-logistics\";\nimport EventContent from \"../../components/events/event-content\";\nimport ErrorAlert from \"../../components/ui/error-alert\";\n\nexport default function eventType() {\n    const router = useRouter();\n    const { eventId } = router.query;\n    const event = getEventById(eventId);\n\n    if (!event) {\n        return (\n            <ErrorAlert>\n                <p>No event found!</p>\n            </ErrorAlert>\n        );\n    }\n\n    return (\n        <>\n            <EventSummary title={event.title} />\n            <EventLogistics\n                date={event.date}\n                address={event.location}\n                image={event.image}\n                imageAlt={event.title}\n            />\n            <EventContent>\n                <p>{event.description}</p>\n            </EventContent>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}