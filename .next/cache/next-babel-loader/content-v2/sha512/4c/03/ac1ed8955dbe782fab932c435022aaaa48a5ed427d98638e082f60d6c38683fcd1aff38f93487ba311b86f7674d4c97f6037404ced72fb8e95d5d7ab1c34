{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martinfeuillet/Desktop/vs code/next/next-js-course/nextjs-course-code/pages/events/[...slug].js\",\n    _s = $RefreshSig$();\n\nimport { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { getFilteredEvents } from \"../../dummyData\";\nimport EventList from \"../../components/events/EventList\";\nexport default function FilteredEvents() {\n  _s();\n\n  var router = useRouter();\n  var filterData = router.query.slug;\n\n  if (!filterData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n  var filteredYear = filterData[0];\n  var filteredMonth = filterData[1];\n  var numYear = +filteredYear;\n  var numMonth = +filteredMonth;\n\n  if (isNaN(numMonth) || isNaN(numYear) || numYear > 2030 || numYear < 2021 || numMonth > 12 || numMonth < 1) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"Invalid filter, please adjust your values\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 16\n    }, this);\n  }\n\n  var filterEvents = getFilteredEvents({\n    year: numYear,\n    month: numMonth\n  });\n\n  if (!filterEvents || filterEvents === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No events found for the chosen filter!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 14\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(EventList, {\n      items: filterEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n}\n\n_s(FilteredEvents, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = FilteredEvents;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilteredEvents\");","map":{"version":3,"sources":["/Users/martinfeuillet/Desktop/vs code/next/next-js-course/nextjs-course-code/pages/events/[...slug].js"],"names":["useRouter","React","getFilteredEvents","EventList","FilteredEvents","router","filterData","query","slug","filteredYear","filteredMonth","numYear","numMonth","isNaN","filterEvents","year","month"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,iBAAlC;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACrC,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,MAAMM,UAAU,GAAGD,MAAM,CAACE,KAAP,CAAaC,IAAhC;;AAEA,MAAI,CAACF,UAAL,EAAiB;AACb,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAMG,YAAY,GAAGH,UAAU,CAAC,CAAD,CAA/B;AACA,MAAMI,aAAa,GAAGJ,UAAU,CAAC,CAAD,CAAhC;AAEA,MAAMK,OAAO,GAAG,CAACF,YAAjB;AACA,MAAMG,QAAQ,GAAG,CAACF,aAAlB;;AAEA,MACIG,KAAK,CAACD,QAAD,CAAL,IACAC,KAAK,CAACF,OAAD,CADL,IAEAA,OAAO,GAAG,IAFV,IAGAA,OAAO,GAAG,IAHV,IAIAC,QAAQ,GAAG,EAJX,IAKAA,QAAQ,GAAG,CANf,EAOE;AACE,wBAAO;AAAG,MAAA,SAAS,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,MAAME,YAAY,GAAGZ,iBAAiB,CAAC;AAACa,IAAAA,IAAI,EAAGJ,OAAR;AAAiBK,IAAAA,KAAK,EAAGJ;AAAzB,GAAD,CAAtC;;AAEA,MAAI,CAACE,YAAD,IAAiBA,YAAY,KAAK,CAAtC,EAA0C;AACxC,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBAAO;AAAA,2BACL,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,UAAP;AAGH;;GAnCuBV,c;UACLJ,S;;;KADKI,c","sourcesContent":["import { useRouter } from \"next/router\";\nimport React from \"react\";\nimport { getFilteredEvents } from \"../../dummyData\";\nimport EventList from \"../../components/events/EventList\";\n\nexport default function FilteredEvents() {\n    const router = useRouter();\n\n    const filterData = router.query.slug;\n\n    if (!filterData) {\n        return <p className=\"center\">Loading</p>;\n    }\n\n    const filteredYear = filterData[0];\n    const filteredMonth = filterData[1];\n\n    const numYear = +filteredYear;\n    const numMonth = +filteredMonth;\n\n    if (\n        isNaN(numMonth) ||\n        isNaN(numYear) ||\n        numYear > 2030 ||\n        numYear < 2021 ||\n        numMonth > 12 ||\n        numMonth < 1\n    ) {\n        return <p className=\"center\">Invalid filter, please adjust your values</p>;\n    }\n\n    const filterEvents = getFilteredEvents({year : numYear, month : numMonth});\n\n    if (!filterEvents || filterEvents === 0 ) {\n      return <p>No events found for the chosen filter!</p>\n    }\n\n    return <div>\n      <EventList items={filterEvents} />\n    </div>;\n}\n"]},"metadata":{},"sourceType":"module"}